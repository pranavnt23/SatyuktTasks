import csv
import os
from datetime import datetime
from db_pro import fetch

def export_sf_gc_farmer_stats():
    # Step 1: Get all user_ids under account_id 6004
    user_id_rows = fetch("userID_to_accountID", columns=["user_id"], account_id=6004)
    user_ids = [row[0] for row in user_id_rows if row and row[0]]

    # Step 2: Fetch mobile numbers from user_credentials
    user_mobiles = []
    for uid in user_ids:
        cred = fetch("user_credentials", columns=["user_name"], user_id=uid)
        if cred and cred[0]:
            user_mobiles.append((uid, cred[0][0]))  # (user_id, mobile_no)

    # Step 3: Fetch all polygon and payment info in bulk
    polygon_rows = fetch("polygonStore", columns=["id", "area", "clientID"])
    paid_farm_rows = fetch("paymentGateway", columns=["farm_id"])
    paid_farm_ids = set(row[0] for row in paid_farm_rows if row and row[0])

    # Step 4: Prepare CSV header
    csv_data = [["Date of Registration", "Farmer Name", "Mobile Number", "Farms Added", "Paid Farms", "Unpaid Farms"]]

    # Step 5: Process each user
    for uid, mobile_no in user_mobiles:
        user_info = fetch("user_details", columns=["registration_date", "full_name", "mobile_no"], mobile_no=mobile_no)
        if user_info and user_info[0]:
            registration_date, full_name, number = user_info[0]
        else:
            registration_date, full_name, number = "N/A", "N/A", "N/A"

        user_farms = [row for row in polygon_rows if row[2] == uid]
        farm_ids = [row[0] for row in user_farms]

        paid_count = sum(1 for fid in farm_ids if fid in paid_farm_ids)
        unpaid_count = len(farm_ids) - paid_count

        csv_data.append([registration_date, full_name, number, len(user_farms), paid_count, unpaid_count])

    # Step 6: Save to Downloads folder
    downloads_dir = os.path.join(os.path.expanduser("~"), "Downloads")
    os.makedirs(downloads_dir, exist_ok=True)
    
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    file_name = f"SFGC_Farmer_Stats_CountOnly_{timestamp}.csv"
    file_path = os.path.join(downloads_dir, file_name)

    with open(file_path, mode='w', newline='', encoding='utf-8') as f:
        writer = csv.writer(f)
        writer.writerows(csv_data)

    print(f"âœ… CSV exported to: {file_path}")

if __name__ == "__main__":
    export_sf_gc_farmer_stats()
